<launch>
    <!-- Namespace for both cameras -->
    
    <group ns="multicam">
        <!-- First camera node -->
        <node name="cam_1" pkg="usb_cam" type="usb_cam_node" output="screen">
            <param name="camera_info_url" value="package://monocular_video_perception/calibration_files/cam_1.yaml"/>
            <param name="video_device" value="/dev/video10" />
            <param name="image_width" value="640" />
            <param name="image_height" value="480" />
            <param name="pixel_format" value="yuyv" />
            <param name="io_method" value="mmap" />
            <param name="camera_name" value="cam_1"/>
        </node>

        <node name="cam_1_rectify" pkg="image_proc" type="image_proc" output="screen" respawn="true">
            <remap from="image_raw" to="cam_1/image_raw"/>
            <remap from="camera_info" to="cam_1/camera_info"/>
            <remap from="image_rect" to="cam_1/image_rect"/>
        </node>

        <node name="cam_2" pkg="usb_cam" type="usb_cam_node" output="screen">
            <param name="camera_info_url" value="package://monocular_video_perception/calibration_files/cam_2.yaml"/>
            <param name="video_device" value="/dev/video4" />
            <param name="image_width" value="640" />
            <param name="image_height" value="480" />
            <param name="pixel_format" value="yuyv" />
            <param name="io_method" value="mmap" />
            <param name="camera_name" value="cam_2"/>
        </node>

        <node name="cam_2_rectify" pkg="image_proc" type="image_proc" output="screen" respawn="true">
            <remap from="image_raw" to="cam_2/image_raw"/>
            <remap from="camera_info" to="cam_2/camera_info"/>
            <remap from="image_rect" to="cam_2/image_rect"/>
        </node>

        <node name="cam_3" pkg="usb_cam" type="usb_cam_node" output="screen">
            <param name="camera_info_url" value="package://monocular_video_perception/calibration_files/cam_3.yaml"/>
            <param name="video_device" value="/dev/video8" />
            <param name="image_width" value="640" />
            <param name="image_height" value="480" />
            <param name="pixel_format" value="yuyv" />
            <param name="io_method" value="mmap" />
            <param name="camera_name" value="cam_3"/>
        </node>

        <node name="cam_3_rectify" pkg="image_proc" type="image_proc" output="screen" respawn="true">
            <remap from="image_raw" to="cam_3/image_raw"/>
            <remap from="camera_info" to="cam_3/camera_info"/>
            <remap from="image_rect" to="cam_3/image_rect"/>
        </node>

        <node name="cam_4" pkg="usb_cam" type="usb_cam_node" output="screen">
            <param name="camera_info_url" value="package://monocular_video_perception/calibration_files/cam_4.yaml"/>
            <param name="video_device" value="/dev/video6" />
            <param name="image_width" value="640" />
            <param name="image_height" value="480" />
            <param name="pixel_format" value="yuyv" />
            <param name="io_method" value="mmap" />
            <param name="camera_name" value="cam_4"/>
        </node>

        <node name="cam_4_rectify" pkg="image_proc" type="image_proc" output="screen" respawn="true">
            <remap from="image_raw" to="cam_4/image_raw"/>
            <remap from="camera_info" to="cam_4/camera_info"/>
            <remap from="image_rect" to="cam_4/image_rect"/>
        </node> 

        <!-- The order in args is x y z yaw pitch roll parent child-->
        <!-- <node name="world_to_cam1_tf" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /world /multicam/cam_1/camera_frame 100" /> -->
        <!-- <node name="cam2_to_cam1_tf" pkg="tf" type="static_transform_publisher" args="0 0.03 -0.03 0.03 -0.01, -0.25 /multicam/cam_2/camera_frame /multicam/cam_1/camera_frame 100" /> -->
        <node name="cam1_to_cam2_tf" pkg="tf" type="static_transform_publisher" args="0.022 0.021 0.01 0.01 0.01 -0.2 /multicam/cam_1/camera_frame /multicam/cam_2/camera_frame 100" />
        <node name="cam2_to_cam3_tf" pkg="tf" type="static_transform_publisher" args="0 0.03 0.01 0.01 0.01 -0.25 /multicam/cam_2/camera_frame /multicam/cam_3/camera_frame 100" />
        <node name="cam3_to_cam4_tf" pkg="tf" type="static_transform_publisher" args="-0.022 0.02 0 0.01 0.01 -0.35 /multicam/cam_3/camera_frame /multicam/cam_4/camera_frame 100" />


        <node pkg="rqt_gui" type="rqt_gui" name="rqt" output="screen"/>
        <node pkg="rviz" type="rviz" name="rviz" args="-d $(find monocular_video_perception)/rviz/axes_tf_2.rviz"/>

        <node name="aruco_marker_detection_cam_1" type="aruco_marker_node_tf.py" pkg="monocular_video_perception" args="--camera_num 1"/>

        <node name="aruco_marker_detection_cam_2" type="aruco_marker_node_tf.py" pkg="monocular_video_perception" args="--camera_num 2"/>

        <node name="aruco_marker_detection_cam_3" type="aruco_marker_node_tf.py" pkg="monocular_video_perception" args="--camera_num 3"/>

        <node name="aruco_marker_detection_cam_4" type="aruco_marker_node_tf.py" pkg="monocular_video_perception" args="--camera_num 4"/>



    </group>
</launch>